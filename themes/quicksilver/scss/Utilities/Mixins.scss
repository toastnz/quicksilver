//------------------------------------------------------------------
//                          Break Points
//------------------------------------------------------------------

$xxs: 480px;
$xs: 540px;
$sm: 640px;
$md: 768px;
$xmd: 968px;
$lg: 1024px;
$xl: 1280px;
$xxl: 1440px;
$xxxl: 1600px;

//------------------------------------------------------------------
// Box Shadows
//------------------------------------------------------------------

$z1: 0 1px 3px rgba($black, .12), 0 1px 2px rgba($black, .24);
$z2: 0 3px 6px rgba($black, .16), 0 3px 6px rgba($black, .23);
$z3: 0 10px 20px rgba($black, .19), 0 6px 6px rgba($black, .23);
$z4: 0 14px 28px rgba($black, .25), 0 10px 10px rgba($black, .22);
$z5: 0 19px 38px rgba($black, .3), 0 15px 12px rgba($black, .22);

//------------------------------------------------------------------
// Material Easing Beziers
//------------------------------------------------------------------

$transition-sharp: cubic-bezier(.4, 0, .6, 1);
$transition-standard: cubic-bezier(.4, 0, .2, 1);
$transition-acceleration: cubic-bezier(.4, 0, 1, 1);
$transition-deceleration: cubic-bezier(0, 0, .2, 1);

//------------------------------------------------------------------
// HAF
//------------------------------------------------------------------

@mixin active($class: null) {
  @if($class) {
    &.#{$class},
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }@else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

//------------------------------------------------------------------
// Media Queries
//------------------------------------------------------------------

@mixin media($size1, $size2: min) {
  @if $size2 == min {
    @media only screen and (min-width: $size1) {
      @content;
    }
  } @else if $size2 == max {
    @media only screen and (max-width: $size1 - 1) {
      @content;
    }
  } @else {
    @media only screen and (min-width: $size1) and (max-width: $size2 - 1) {
      @content;
    }
  }
}

//------------------------------------------------------------------
// Vertical Align
//------------------------------------------------------------------

@mixin vertical-align {
  top: 50%;
  transform: translateY(-50%);
  position: absolute;
}

@mixin vertical-center {
  top: 50%;
  transform: translateY(-50%);
  position: absolute;
  left: 0;
  right: 0;
  margin: 0 auto;
}

//------------------------------------------------------------------
// Placeholders
//------------------------------------------------------------------

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content
  }

  &:-moz-placeholder {
    @content
  }

  &::-moz-placeholder {
    @content
  }

  &:-ms-input-placeholder {
    @content
  }
}

//------------------------------------------------------------------
// Micro Clearfix
//------------------------------------------------------------------

@mixin clearfix {
  &:before,
  &:after {
    content: '';
    display: table;
  }

  &:after {
    clear: both;
  }
}

.clearfix:before,
.clearfix:after {
  content: '';
  display: table;
}

.clearfix:after {
  clear: both;
}

//------------------------------------------------------------------
// Pseudo Elements
//------------------------------------------------------------------

@mixin pseudo {
  position: absolute;
  content: '';
  display: block;
}

//------------------------------------------------------------------
// Full Cover Positioning
//------------------------------------------------------------------

@mixin full {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

//------------------------------------------------------------------
// Dynamic Aspect Ratios
//------------------------------------------------------------------

@mixin aspect($x, $y) {
  position: relative;

  &:after {
    content: '';
    position: relative;
    display: block;
    padding-bottom: percentage($y / $x);
  }
}

//------------------------------------------------------------------
// Background Cover
//------------------------------------------------------------------

@mixin cover {
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}

//------------------------------------------------------------------
// Background Contain
//------------------------------------------------------------------

@mixin contain {
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
}

//------------------------------------------------------------------
// Image Crop
//------------------------------------------------------------------

@mixin crop($x,$y) {
  width: 100%;
  padding-bottom: percentage($y / $x);
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}

//------------------------------------------------------------------
// Embed Responsivley for Youtube and Vimeo videos
//------------------------------------------------------------------

.wysiwyg .media,
.embed-container {
  position: relative;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  max-width: 100%;

  object,
  embed,
  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

//------------------------------------------------------------------
// Responsive SVGs
//------------------------------------------------------------------

@mixin svg($x, $y) {
  position: relative;

  &:after {
    content: '';
    position: relative;
    display: block;
    padding-bottom: percentage($y / $x);
  }

  >svg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

//------------------------------------------------------------------
// Sizes
//------------------------------------------------------------------

@mixin size($x, $y: $x) {
  width: $x;
  height: $y;
}

//------------------------------------------------------------------
// Positions
//------------------------------------------------------------------

@mixin pos($p: relative, $t: auto, $r: $t, $b: $t, $l: $r) {
  position: $p;
  top: $t;
  right: $r;
  bottom: $b;
  left: $l;
}

//------------------------------------------------------------------
// Overlay Colour
//------------------------------------------------------------------

@mixin overlay($color, $opacity) {
  &:after {
    content: '';
    @include pos(absolute, 0);
    background-color: rgba($color, $opacity);
  }
}

@mixin vertGrad($color1, $color2) {
  background: linear-gradient(to bottom, $color1 0%,$color2 100%);
}

@mixin horzGrad($color1, $color2, $color3: null) {
  @if($color3) {
    background: linear-gradient(to right, $color1 0%, $color2 50%, $color3 100%);
  }@else {
    background: linear-gradient(to right, $color1 0%, $color2 100%);
  }
}

//------------------------------------------------------------------
// Close Button
//------------------------------------------------------------------

@mixin closeBtn($size, $thickness, $color) {
  position: absolute;
  border: none;
  box-shadow: none;
  background-color: transparent;
  height: $size;
  width: $size;
  top: $gutterWidth;
  right: $gutterWidth;
  cursor: pointer;
  outline: none;
  &:before,
  &:after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: $thickness;
    background-color: $color;
  }
  &:before {
    transform: translate(-50%, -50%) rotate(45deg);
  }
  &:after {
    transform: translate(-50%, -50%) rotate(-45deg);
  }
}

//------------------------------------------------------------------
// Autofill
//------------------------------------------------------------------

@mixin autofill($color) {
  input:-webkit-autofill,
  input:-webkit-autofill:hover, 
  input:-webkit-autofill:focus, 
  input:-webkit-autofill:active  {
      -webkit-box-shadow: 0 0 0 30px $color inset;
      background-color: $color !important;
  }
}

//------------------------------------------------------------------
// Transitions
//------------------------------------------------------------------

@mixin transition($array, $duration: .2s, $ease: ease) {
  $transitions: ();

  @for $i from 1 through length($array) {
    $transitions: append($transitions, nth($array, $i) $duration ease + ',')
  };
  
  transition: $transitions;
}

//------------------------------------------------------------------
// Animations
//------------------------------------------------------------------

@mixin keyframe($name, $duration: 3s, ) {
  @-webkit-keyframes #{$name} {
    @content;
  }

  @keyframes #{$name} {
    @content;
  }

  & {
    -webkit-animation: #{$name} #{$duration} infinite; /* Safari 4.0 - 8.0 */
    animation: #{$name} #{$duration} infinite;
  }
}