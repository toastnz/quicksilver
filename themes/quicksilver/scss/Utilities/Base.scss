//------------------------------------------------------------------
// Typography variables
//------------------------------------------------------------------

$base: 10px;
$base-line-height: 1.4;
$base-type-margin: 1.8rem;


//------------------------------------------------------------------
// Declare our font-familys
//------------------------------------------------------------------

@import url('https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700,900');


$primary-font: "Montserrat", Helvetica, sans-serif;
$secondary-font: "Montserrat", Helvetica, sans-serif;
$tertiary-font: "Montserrat", Helvetica, sans-serif;

//------------------------------------------------------------------
// Link Colour
//------------------------------------------------------------------

$link-colour: $primary;

//------------------------------------------------------------------
// Font Sizes
// 'element': (intial size, $lg size),
//------------------------------------------------------------------

$font-size-map: (
        'h1' : (3.5rem, 5.0rem),
        'h2' : (3.0rem, 4.0rem),
        'h3' : (2.4rem, 2.8rem),
        'h4' : (2.0rem, 2.8rem),
        'h5' : (1.8rem, 2.2rem),
        'h6' : (1.6rem, 1.8rem),
        'p.large' : (1.6rem, 2.0rem),
        'p' : (1.4rem, 1.6rem),
        'small' : (1.0rem, 1.3rem),
);


//------------------------------------------------------------------
// list of all elements that we want styled as paragraph text.
// note: <p> does not need to be included in this list.
//------------------------------------------------------------------

$paragraph-text-elements: span, b, em, i, li, input, textarea, td, tr, tl, dl, dt, strong, pre, label;

//------------------------------------------------------------------
// Font Families
//------------------------------------------------------------------

// Font family extentions
%primaryFont {
  font-family: $primary-font;
}

%secondaryFont {
  font-family: $secondary-font;
}

%tertiaryFont {
  font-family: $tertiary-font;
}

// Mixins to include font-familys
@mixin primary-font($weight) {
  @extend %primaryFont;
  font-weight: $weight;
}

@mixin secondary-font($weight) {
  @extend %secondaryFont;
  font-weight: $weight;
}

@mixin tertiary-font($weight) {
  @extend %tertiaryFont;
  font-weight: $weight;
}

// Create font-weight mixins to call elsewhere
// Use @include thin; or @include thin(secondary);

// Thin: 100
@mixin thin($family: primary) {
  @if $family == secondary {
    @include secondary-font(100);
  } @else if $family == tertiary {
    @include tertiary-font(100);
  } @else if $family == primary {
    @include primary-font(100);
  } @else {
    font-weight: 100;
  }
}

// Extra Light: 200
@mixin extralight($family: primary) {
  @if $family == secondary {
    @include secondary-font(200);
  } @else if $family == tertiary {
    @include tertiary-font(200);
  } @else if $family == primary {
    @include primary-font(200);
  } @else {
    font-weight: 200;
  }
}

// Light: 300
@mixin light($family: primary) {
  @if $family == secondary {
    @include secondary-font(300);
  } @else if $family == tertiary {
    @include tertiary-font(300);
  } @else if $family == primary {
    @include primary-font(300);
  } @else {
    font-weight: 300;
  }
}

// Regular: 400
@mixin regular($family: primary) {
  @if $family == secondary {
    @include secondary-font(400);
  } @else if $family == tertiary {
    @include tertiary-font(400);
  } @else if $family == primary {
    @include primary-font(400);
  } @else {
    font-weight: 400;
  }
}

// Medium: 500
@mixin medium($family: primary) {
  @if $family == secondary {
    @include secondary-font(500);
  } @else if $family == tertiary {
    @include tertiary-font(500);
  } @else if $family == primary {
    @include primary-font(500);
  } @else {
    font-weight: 500;
  }
}

// Semi Bold: 600
@mixin semi($family: primary) {
  @if $family == secondary {
    @include secondary-font(600);
  } @else if $family == tertiary {
    @include tertiary-font(600);
  } @else if $family == primary {
    @include primary-font(600);
  } @else {
    font-weight: 600;
  }
}

// Bold: 700
@mixin bold($family: primary) {
  @if $family == secondary {
    @include secondary-font(700);
  } @else if $family == tertiary {
    @include tertiary-font(700);
  } @else if $family == primary {
    @include primary-font(700);
  } @else {
    font-weight: 700;
  }
}

// Extra Bold: 800
@mixin extrabold($family: primary) {
  @if $family == secondary {
    @include secondary-font(800);
  } @else if $family == tertiary {
    @include tertiary-font(800);
  } @else if $family == primary {
    @include primary-font(800);
  } @else {
    font-weight: 800;
  }
}

// Black: 900
@mixin black($family: primary) {
  @if $family == secondary {
    @include secondary-font(900);
  } @else if $family == tertiary {
    @include tertiary-font(900);
  } @else if $family == primary {
    @include primary-font(900);
  } @else {
    font-weight: 900;
  }
}

//------------------------------------------------------------------
// Base body styles
//------------------------------------------------------------------

html,
body {
  @include regular;
  font-size: $base;

  * {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  a {
    &:not(.button) {
      color: $link-colour;
      text-decoration: none;
    }
  }
}

::selection {
  color: $white;
  background: rgba($primary, .99999);
}

//------------------------------------------------------------------
// WYSIWYG defaults
//------------------------------------------------------------------

%globalTypeSettings {
  line-height: $base-line-height;
}

// Here's a mixin to output our desired font-size on mobile and desktop
@mixin font-size($mobile, $desktop) {
  font-size: $mobile;

  @include media($lg) {
    font-size: $desktop;
  }
}

//------------------------------------------------------------------
// font-size
//------------------------------------------------------------------

@each $element, $size in $font-size-map {
  #{$element},
  .#{$element},
  %#{$element} {
    @extend %globalTypeSettings;
    @include font-size($size...);
    margin-bottom: $base-type-margin;
  }
}

// Loop our $paragraph-text-elements and extend the %p to avoid code repetition
@each $element in $paragraph-text-elements {
  #{$element} {
    @extend %p;
  }
}


// This allows any text elements contained in h tags to inherit the h tag font size
@for $i from 1 through 6 {
  h#{$i},
  .h#{$i},
  %h#{$i} {

    @each $element in $paragraph-text-elements {
      > #{$element}, > .#{$element} {
        font-size: inherit;
      }
    }
  }
}

//------------------------------------------------------------------
// Lists
//------------------------------------------------------------------

ul,
ol {

  &:not(.unstyled) {
    padding-left: 2rem;
    margin-bottom: 3rem;

    ul,
    ol {
      margin-bottom: 0;
    }

    li {
      padding-left: 1rem;
      margin-bottom: 1rem;

      ul,
      ol {
        margin-top: 1rem;
      }
    }
  }
}

ul {
  &:not(.unstyled):not(.coloured) {
    list-style: disc;
  }

  &.coloured {

    li {
      position: relative;

      &:before {
        @include pseudo;
        width: .6rem;
        height: .6rem;
        border-radius: 50%;
        top: .5em;
        left: -1.9rem;
        background: $primary;
      }
    }

    ul:not(.unstyled):not(.coloured) {
      li {
        &:before {
          content: none;
        }
      }
    }

    // See Colours.scss
    @each $colour, $value in $colour-map {
      &.coloured--#{$colour} {
        li {
          &:before {
            background: $value;
          }
        }
      }
    }
  }
}

ol {
  &:not(.unstyled) {
    list-style: decimal outside;
  }
}

//------------------------------------------------------------------
// Font Styles
//------------------------------------------------------------------

.italic,
em,
i {
  font-style: italic;
}

.bold,
strong,
b {
  @include bold;
}

//------------------------------------------------------------------
// Tables
//------------------------------------------------------------------

caption {
  @extend %h3;
}

.js-table {
  position: relative;
  overflow: auto;
  padding: 0 2rem;
  margin: 0 -2rem 2rem;


  &::-webkit-scrollbar-track {
    background-color: $grey-light;
  }

  &::-webkit-scrollbar {
    width: 2px;
    height: 4px;
    background-color: $grey-light;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $primary;
    border: 0;
  }
}

table {
  vertical-align: top;
  max-width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
  width: 100%;
  margin: 3rem auto;
  border-radius: .5rem;
  position: relative;
  overflow: hidden;
  box-shadow: 0 15px 35px rgba($blue-dark, .2), 0 5px 15px rgba($blue-dark, .14);
  min-width: $md;
  border: 2px solid $white;

  thead {
    border-radius: .5rem;
  }

  tr {
    background: $off-white;
    border-bottom: 2px solid $white;
    margin-bottom: 5px;


    tr:nth-child(even) {
      background: $grey-light;
    }

    th {
      @extend %h6;
      @include bold;
      background: $primary !important;
      color: $white;
    }

    &:nth-child(even) {
      td {
        background: darken($grey-light, 2%);
      }
    }

    th,
    td {
      text-align: left;
      padding: 1.5rem;
      border-right: 2px solid $white;
    }
  }
}

//------------------------------------------------------------------
// Images
//------------------------------------------------------------------

img {
  max-width: 100%;
  height: auto;
}

//------------------------------------------------------------------
// WYSIWYG Image Text Wrap
//------------------------------------------------------------------

.contentBlock {
  // Make sure all text that appears in a .contentBlock follows the appropriate font-size, not the $base font-size.
  @extend %p;

  img {
    display: block;
    margin-bottom: 15px;

    @include media($lg, max) {
      width: 100%;
      height: auto;
    }

    @include media($lg) {
      &.left {
        float: left;
        margin-right: 15px;
        margin-bottom: 15px;
      }

      &.right {
        float: right;
        margin-left: 15px;
        margin-bottom: 15px;
      }

      &:not([width]) {
        max-width: 100%;
      }

      &:not([height]) {
        height: auto;
      }
    }
  }

  //------------------------------------------------------------------
  // WYSIWYG block quote
  //------------------------------------------------------------------

  blockquote {
    margin: 3rem;
    padding: 0 2rem;
    border-left: 4px solid $primary;

    @each $colour, $value in $colour-map {
      &.blockquote--#{$colour} {
        border-color: $value;
      }
    }

    p {
      margin: 0;
    }
  }

}

cite {
  @extend %h6;
  margin-bottom: 2rem;
  display: block;
}

//------------------------------------------------------------------
// WYSIWYG horizontal rule
//------------------------------------------------------------------

hr {
  border: 0;
  border-top: 1px solid $grey-light;
  margin: 3rem auto;
}


//------------------------------------------------------------------
// Text Alignment
//------------------------------------------------------------------

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

@each $breakpoint, $value in $breakpoints {

  @include media($value) {

    .#{$breakpoint}-text-left {
      text-align: left;
    }

    .#{$breakpoint}-text-right {
      text-align: right;
    }

    .#{$breakpoint}-text-center {
      text-align: center;
    }
  }
}

//------------------------------------------------------------------
// Heading Weights (optional)
//------------------------------------------------------------------
//
//@for $i from 1 through 6 {
//  h#{$i},
//  .h#{$i},
//  %h#{$i} {
//    @extend %primaryFont;
//    @include bold;
//    line-height: 1.2;
//  }
//}